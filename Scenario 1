//Scenario 1
//Buyer can check available pets named 'pupo' with category named 'pajaro' and place and order for a pet

const petname = 'pupo';
const category = 'pajaro';

// Send a GET request to find the target pet
pm.sendRequest({
    url: 'https://petstore.swagger.io/v2/pet/findByStatus',
    method: 'GET',
    header: {
        'Content-Type': 'application/json'
    },
    params: {
        status: 'available'
    }
}, function (err, res) {
    if (err) {
        console.error('Error fetching pets:', err);
        return;
    }

    // Parse the JSON response
    const response = res.json();

    // Filter the response to find pets with the specified name and category
    const petspupopajaro = response.filter(pet => 
        pet.name.toLowerCase() === petname.toLowerCase() && 
        pet.category.name.toLowerCase() === category.toLowerCase()
    );

    // Log the filtered pets to the Postman console
    console.log(`Available pets named '${petname}' in category '${category}':`, petspupopajaro);

    // Check if any pets were found
    if (petspupopajaro.length > 0) {
        petspupopajaro.forEach(pet => {
            const petId = pet.id;

            // Define the order object
            const order = {
                id: 0, // Assuming 0 or a unique ID generated by the server
                petId: petId,
                quantity: 1,
                shipDate: new Date().toISOString(),
                status: "placed",
                complete: true
            };

            // Send a POST request to place the order
            pm.sendRequest({
                url: 'https://petstore.swagger.io/v2/store/order',
                method: 'POST',
                header: {
                    'Content-Type': 'application/json'
                },
                body: {
                    mode: 'raw',
                    raw: JSON.stringify(order)
                }
            }, function (err, res) {
                if (err) {
                    console.error('Error placing order:', err);
                } else {
                    console.log('Order placed successfully for pet ID:', petId, res.json());
                    pm.test('Order placed successfully', function () {
                        pm.expect(res.status).to.equal(200);
                    });
                }
            });
        });
    } else {
        console.log(`No available pets named '${petname}' in category '${category}' found.`);
        pm.test(`No available pets named '${petname}' in category '${category}' found.`, function () {
            pm.expect(petspupopajaro.length).to.be.above(0);
        });
    }
});

